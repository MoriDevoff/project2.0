# Generated by Django 5.2.1 on 2025-05-24 09:47

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('avatar_file', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('block_reason', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('mileage', models.PositiveIntegerField()),
                ('engine_capacity', models.DecimalField(decimal_places=1, max_digits=4)),
                ('fuel_type', models.CharField(choices=[('Бензин', 'Бензин'), ('Дизель', 'Дизель'), ('Электрическая', 'Электрическая'), ('Гибрид', 'Гибрид'), ('Газ', 'Газ')], max_length=50)),
                ('transmission', models.CharField(choices=[('Механическая', 'Механическая'), ('Автоматическая', 'Автоматическая'), ('Робот', 'Робот'), ('Вариатор', 'Вариатор')], max_length=50)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_sold', models.BooleanField(default=False)),
                ('condition', models.CharField(choices=[('new', 'Новый'), ('used', 'Б/у')], default='used', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CarPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_url', models.URLField(blank=True, null=True)),
                ('photo_file', models.ImageField(blank=True, null=True, upload_to='car_photos/')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carphoto_set', to='cars.car')),
            ],
        ),
        migrations.CreateModel(
            name='CarSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_type', models.CharField(choices=[('Седан', 'Седан'), ('Хетчбек', 'Хетчбек'), ('SUV', 'SUV'), ('Купе', 'Купе'), ('Кабриолет', 'Кабриолет'), ('Минивэн', 'Минивэн'), ('Пикап', 'Пикап')], max_length=20)),
                ('doors', models.IntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(6)])),
                ('seats', models.IntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(9)])),
                ('power', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('drive_type', models.CharField(choices=[('Передний', 'Передний'), ('Задний', 'Задний'), ('4WD', '4WD'), ('AWD', 'AWD')], max_length=10)),
                ('vin', models.CharField(max_length=17, unique=True)),
                ('weight', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('country_of_origin', models.CharField(blank=True, max_length=50)),
                ('car', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cars.car')),
            ],
            options={
                'db_table': 'CarSpecifications',
            },
        ),
        migrations.CreateModel(
            name='EmailVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expiration_date', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('new_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('change_date', models.DateTimeField(auto_now_add=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.car')),
                ('changed_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'PriceHistory',
            },
        ),
        migrations.CreateModel(
            name='PurchaseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offered_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('message', models.TextField(blank=True)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('В ожидании', 'В ожидании'), ('Одобрено', 'Одобрено'), ('Отклонено', 'Отклонено')], default='В ожидании', max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_requests', to=settings.AUTH_USER_MODEL)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.car')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'PurchaseRequests',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='cars.car')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Favorites',
                'unique_together': {('user', 'car')},
            },
        ),
    ]
